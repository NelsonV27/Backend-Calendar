{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvents","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3571f94.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n//creamos la funcion fetchSinToken\r\nconst fetchSinToken = ( endpoint, data, method = 'GET') => {\r\n\r\n    //crearemos una constante para almacenar las peticion de las URL\r\n    const url = ` ${ baseUrl }/${ endpoint }`; //aqui es para el localhost:4000/api/events\r\n\r\n    //ahora vamos a validar la url\r\n    if( method === 'GET'){\r\n        return fetch( url );\r\n    }else{\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//creamos la funcion fetchConToken\r\nconst fetchConToken = ( endpoint, data, method = 'GET') => {\r\n\r\n    //crearemos una constante para almacenar las peticion de las URL\r\n    const url = ` ${ baseUrl }/${ endpoint }`; //aqui es para el localhost:4000/api/events\r\n    const token = localStorage.getItem('token') || '';\r\n    //ahora vamos a validar la url\r\n    if( method === 'GET'){\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    }else{\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token \r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    //2DA accion de los types\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Star add new',\r\n    eventAddNew : '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loeaded',\r\n\r\n    //para verificar si se autentica el usuario\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish Checking login state',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import moment from 'moment';\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map(\r\n        e => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate(),\r\n        })\r\n    );\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n//accion para agregar una nueva nota\r\nexport const eventStartAddNew = ( event ) => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n       try {\r\n           \r\n         //debemos llamar la accion del fetchConToken\r\n         const resp = await fetchConToken('events', event, 'POST');\r\n         const body = await resp.json();\r\n\r\n\r\n         //validacion del body\r\n         if( body.ok ){\r\n\r\n            event.id = body.evento.id;\r\n            event.user = {\r\n                _id: uid,\r\n                name: name\r\n            }\r\n            \r\n             dispatch( eventAddNew( event ));\r\n         }\r\n \r\n\r\n       } catch (error) {\r\n           \r\n        console.log(error);\r\n\r\n       }\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\n//accion para agregar un evento en el calendario y visualizar en el redux\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n//accion para activar el evento en el redux\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\n//accion para limpiar el evento del modal en el calendario\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent,\r\n});\r\n\r\n//creamos la accion para actualizar el evento del calendario\r\nexport const eventStartUpdated = ( event ) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n\r\n            //creamos la constante para llamar medianate la peticion PUT del token\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            //validamos el body del evento\r\n            if( body.ok ){\r\n                dispatch(eventUpdated( event ));\r\n            }else{\r\n                Swal.fire('ERROR', body.msg, 'error');\r\n            }\r\n            \r\n            \r\n        } catch (error) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n//crear la accion para actualizar o editar el evento del calendario\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\n//creamos la accion para eliminar el evento del calendario\r\nexport const eventStartDeleted = () => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        //creamos la constante para tener el evento en lugar de un argumento\r\n        const { id } = getState().calendar.activeEvents;\r\n        \r\n\r\n        try {\r\n\r\n            //creamos la constnate para almacenar la eliminacion del evento\r\n            const resp = await fetchConToken(`events/${ id }`,{}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            //validamos la eliminacion\r\n            if( body.ok ){\r\n                dispatch( eventDeleted())\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log( error );\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n//crear la accion para actualizar la nota en el calendario\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted,\r\n\r\n})\r\n\r\n//crear la accion para mantener los datos \r\nexport const eventStartLoading = () => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            //creamos la constante para la peticion GET del token\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            \r\n            const events = prepareEvents( body.eventos );\r\n            \r\n            dispatch( eventLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            console.log( error );\r\n        }\r\n    }\r\n}\r\n\r\n//creamos la funcion del eventLoaded\r\nconst eventLoaded = ( events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\n//creamos la accion para limpiar o depurar con el logout\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n//creamos la accion para validar el email y el password\r\nexport const startLogin = ( email, password ) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        //crearmeos la constante para que almacene la info del sin token\r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        //validamos el body\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\r\n            //creamos la accion del login para autenticar usuarios\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\n//creamos la accion para el startRegister\r\nexport const startRegister = ( email, password, name ) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        //crearmeos la constante para que almacene la info del sin token\r\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        //validamos el body\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\r\n            //creamos la accion del login para autenticar usuarios\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n//creamos accion de startChecking para el token\r\nexport const startChecking = () => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        //creamos las constantes para almacenar el token con peticion GET\r\n        const resp = await fetchConToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n\r\n\r\n        //validamos el body\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n\r\n            //creamos la accion del login para autenticar usuarios\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }))\r\n        }else{\r\n           \r\n            //creamos el dispatch para llamar el checkingFinish\r\n            dispatch( checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\n//creamos una constante para que el checking del token sea false o cambie de false\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\n//creamos la accion del authLogin\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\n//creamos la accion para el startLogout\r\nexport const startLogout = () => {\r\n\r\n    return ( dispatch ) => {\r\n\r\n        //borramos los datos del localStorage\r\n        localStorage.clear();\r\n\r\n        //creamos la accion para limpiar los datos\r\n        dispatch( eventLogout());\r\n\r\n        //creamos la accion del dispatch Logout\r\n        dispatch( logout());\r\n\r\n    }\r\n}\r\n\r\n//creamos la funcion Logout \r\nconst logout = () => ({ type: types.authLogout })","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    //crearemos la accion utilizando un useDispatch\r\n    const dispatch = useDispatch();\r\n\r\n    //utilizaremos el hook useForm\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n\r\n        loginEmail: 'nelson@gmail.com',\r\n        loginPassword: '123456'\r\n\r\n    });\r\n\r\n    //ahora vamos a destrcuturar las 2 variables que esta en el useForm\r\n    const { loginEmail, loginPassword } =formLoginValues;\r\n\r\n    //crearemos lo mismo de arriba del Login pero para el Registro de usuarios\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        \r\n        rName: 'Omar',\r\n        rEmail: 'omar@gmail.com',\r\n        rPassword: '123456',\r\n        rPassword2: '123456'\r\n\r\n    });\r\n\r\n    //ahora vamos a extraer con la destructuracion de propiedades\r\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\r\n\r\n    \r\n\r\n    //creamos la funcion submit del formulario Login\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( loginEmail, loginPassword) );\r\n    }\r\n\r\n    //creamos la funcion submit del formulario registro\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        //validaciones para comprar si la contraseña es igual \r\n        if( rPassword !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch( startRegister( rEmail, rPassword, rName ) );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"loginEmail\"\r\n                                value={ loginEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"loginPassword\"\r\n                                value={ loginPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value = { rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword\"\r\n                                value={ rPassword }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    //utilizamos el useSelector\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    //creamos el useDispatch\r\n    const dispatch = useDispatch();\r\n\r\n    //creamos la funcion del handleLogout\r\n    const handleLogout = () => {\r\n\r\n        dispatch( startLogout())\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    \r\n    //creamos una constante donde destructuramos la variable event con los 2 argumentos\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\nimport {\r\n  \r\n  eventClearActiveEvent,\r\n  eventStartAddNew,\r\n  eventStartUpdated,\r\n} from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\n//creamos una constante para inicializar el objeto\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlus1.toDate(),\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n  //crearemos el useSelector para abrir el modal\r\n  const { modalOpen } = useSelector((state) => state.ui);\r\n  const { activeEvents } = useSelector((state) => state.calendar);\r\n\r\n  //crearemos el useDispatch de la accion para cerrar el modal\r\n  const dispatch = useDispatch();\r\n\r\n  //Crearemos el useState para obtener las fechas\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n\r\n  const { notes, title, start, end } = formValues;\r\n\r\n  //creamos el hooks useEffect\r\n  useEffect(() => {\r\n    //condicion para saber si el activeEvents estara en null\r\n    if (activeEvents) {\r\n      setFormValues(activeEvents);\r\n    }else{\r\n      setFormValues( initEvent );\r\n    }\r\n  }, [activeEvents, setFormValues]);\r\n\r\n  //creacion d ela funcion handleInputChange para guardar los datos en memoria\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  //crear la funcion de la closeModal\r\n  const closeModal = () => {\r\n    //TODO: cerrar el modal\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActiveEvent());\r\n    setFormValues(initEvent);\r\n  };\r\n\r\n  //crearemos las funciones handleStartDateChange para guardar el evento inicial\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e,\r\n    });\r\n  };\r\n\r\n  //Creamos las funciones handleEndDateChange para guardar el evento final\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e,\r\n    });\r\n  };\r\n\r\n  //Creamos la funcion handleSubmitForm para guardar y refrezcar el formulario modal\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    //creamos las constantes para validar el submit del formulario\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      Swal.fire(\r\n        \"Error\",\r\n        \"La fecha fin debe ser mayor a la fecha de inicio\",\r\n        \"error\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n\r\n    //TODO: Realizar la granacion en la base de datos\r\n\r\n    //condicion de si existe el activeEvent\r\n    if (activeEvents) {\r\n      dispatch(eventStartUpdated(formValues));\r\n    } else {\r\n      //llamar la accion del dispatch\r\n      dispatch(\r\n        eventStartAddNew( formValues ));\r\n    }\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    //Aqui se esta usando un hiro component\r\n    <Modal\r\n      isOpen={ modalOpen }\r\n      /*  onAfterOpen={ afterOpenModal } */\r\n      onRequestClose={ closeModal }\r\n      style={ customStyles }\r\n      closeTimeoutMS={ 200 }\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1> { ( activeEvents) ? 'Editar Evento' : 'Nuevo evento'} </h1>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={ handleSubmitForm }>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={ handleStartDateChange }\r\n            value={ dateStart }\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            minDate={dateStart}\r\n            className=\"form-control\"\r\n            \r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${!titleValid && \"is-invalid\"}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Información adicional\r\n          </small>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    //creamos el useDispatch para la accion que permita abrir el modal\r\n    const dispatch = useDispatch();\r\n\r\n    //creamos la funcion para dar click y se dispare la accion que permite abrir el modal\r\n    const handleOpenModalClick = () => {\r\n        //creamos la accion para abrir el modal\r\n        dispatch( uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleOpenModalClick }\r\n        >\r\n            <i className=\"fa fa-plus\"></i>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    //crear el useDispatch para llamar la accion de eliminar evento \r\n    const dispatch = useDispatch();\r\n\r\n    //creamos la funcion del handleDelete para eliminar la nota del calendario\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDeleted())\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport { Navbar } from \"../ui/Navbar\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { messages } from \"../../helpers/calendar-messages-es\";\r\nimport { CalendarEvent } from \"./CalendarEvent\";\r\nimport { CalendarModal } from \"./CalendarModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from \"../../actions/events\";\r\nimport { AddNewFab } from \"../ui/AddNewFab\";\r\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\r\nimport { useEffect } from \"react\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n//lo coloque mientras esto se ve en el events\r\n/* const events = [\r\n  {\r\n    title: \"El cumpleaños del jefe\",\r\n    start: moment().toDate(),\r\n    end: moment().add(2, \"hours\").toDate(),\r\n    bgcolor: \"#fafafa\",\r\n    notes: \"Comprar el pastel\",\r\n    user:{\r\n      _id:'123',\r\n      name:'Nelson'\r\n    }\r\n  },\r\n]; */\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n  //creamos le useSelector para agregar eventos\r\n  const { events, activeEvents } = useSelector( state => state.calendar );\r\n\r\n  //crearemos el useDispatch de la accion\r\n  const dispatch = useDispatch();\r\n\r\n  //creamos el useSelector de la accion \r\n  const { uid } = useSelector( state => state.auth );\r\n\r\n  //crear el useState inicializando con el localStorage\r\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n  //crearemos un useEffect\r\n  useEffect(() => {\r\n    \r\n    dispatch( eventStartLoading())\r\n\r\n  }, [ dispatch ]);\r\n\r\n  //creando la funcion onDoubleClick para dar 2 veces click\r\n  const onDoubleClick = (e) => {\r\n    //console.log(e)\r\n    dispatch( uiOpenModal())\r\n  }\r\n\r\n  //Creando la funcion onSelectEvent para seleccionar el evento\r\n  const onSelectEvent = (e) => {\r\n    //console.log(e)\r\n    //crear la accion del dispatch\r\n    dispatch( eventSetActive( e ))\r\n    \r\n  }\r\n\r\n  //Creando la funcion onViewChange para cambiar vistas y cuando se regcarge mantenerla\r\n  const onViewChange = (e) => {\r\n    setLastView(e)\r\n    localStorage.setItem('lastView', e);\r\n  }\r\n\r\n  const onSelectSlot = (e) => {\r\n    dispatch( eventClearActiveEvent())\r\n  }\r\n\r\n  //creamos una constante que contenga la informacion con los siguientes argumentos\r\n  const eventStyleGetter = (event, start, end, isSelected) => {\r\n    \r\n    const style = {\r\n      backgroundColor: ( uid === event.user._id) ? \"#367CF7\" : '#465660',\r\n      borderRadius: \"0px\",\r\n      opacity: 0.8,\r\n      display: \"block\",\r\n      color: \"white\",\r\n    };\r\n\r\n    //retornamos los styles\r\n    return {\r\n      style,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n\r\n      <Calendar\r\n        localizer={ localizer }\r\n        events={ events }\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={ messages }\r\n        eventPropGetter={ eventStyleGetter }\r\n        onDoubleClickEvent={ onDoubleClick }\r\n        onSelectEvent={ onSelectEvent }\r\n        onView={ onViewChange }\r\n        onSelectSlot={ onSelectSlot }\r\n        selectable={ true }\r\n        view={ lastView }\r\n        components={{\r\n          event: CalendarEvent\r\n        }}\r\n      />\r\n\r\n        <AddNewFab />\r\n\r\n        \r\n        {\r\n          //Creamos la condicion para que el boton borrar el evento aparezca cuando se active la nota\r\n          ( activeEvents ) && <DeleteEventFab />\r\n        }\r\n\r\n        \r\n\r\n        <CalendarModal />\r\n\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    //console.log(rest.location.pathname);\r\n    //localStorage.setItem('lastpath', rest.location.pathname);\r\n\r\n\r\n    return (\r\n        \r\n        <Route { ...rest }\r\n           component={ (props) => (\r\n               ( isAuthenticated )\r\n               ? (<Component { ...props } />)\r\n               : (<Redirect to=\"/login\" />)\r\n           )}\r\n\r\n\r\n        \r\n        />\r\n\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        \r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated)\r\n                ? (<Redirect to=\"/\" />)\r\n                : (<Component { ...props } />)\r\n                \r\n                \r\n            )} \r\n            \r\n        />\r\n\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    //utilizaremos el useDispatch para la constante checkingFinish\r\n    const dispatch = useDispatch();\r\n\r\n    //utilizaremos el hooks useSelector\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n\r\n    //usaremos el useEffect\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking())\r\n\r\n    }, [ dispatch ])\r\n\r\n    //validamos la espera del checking, le puedes poner un loading de acuerdo a tus gustos\r\n    if( checking ){\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n\r\n    return (\r\n       <Router>\r\n           <div>\r\n               <Switch>\r\n                   <PublicRoute \r\n                    exact \r\n                    path=\"/login\" \r\n                    component={ LoginScreen }\r\n                    isAuthenticated={ !!uid } \r\n                   />\r\n\r\n                   <PrivateRoute \r\n                    exact \r\n                    path=\"/\" \r\n                    component={ CalendarScreen }\r\n                    isAuthenticated={ !!uid }  \r\n                   />\r\n\r\n                   <Redirect to=\"/\" /> \r\n               </Switch>\r\n           </div>\r\n       </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n//creamos una constante initialState\r\nconst initialState = {\r\n    checking: true,\r\n    /* uid: null,\r\n    name: null */\r\n}\r\n\r\n//ahora creamos la funcion authReducer\r\nexport const authReducer = ( state = initialState, action  ) => {\r\n\r\n    switch (action.type) {\r\n        //case para el login\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n                \r\n            }\r\n\r\n            //case para el checkingFinish del token\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n            //case para el startLogout\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\n/* {\r\n    id: 'hdhdhd'\r\n    title: \"El cumpleaños del jefe\",\r\n    start: moment().toDate(),\r\n    end: moment().add(2, \"hours\").toDate(),\r\n    bgcolor: \"#fafafa\",\r\n    notes: \"Comprar el pastel\",\r\n    user:{\r\n      _id:'123',\r\n      name:'Nelson'\r\n    }\r\n  }\r\n */\r\n\r\nconst initialState = {\r\n    events: [],\r\n\r\n    //activar los eventos \r\n    activeEvents: null\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        //case para activar el evento al momento de seleccionar una nota\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvents: action.payload\r\n            }\r\n\r\n            //case para agregar nueva nota en el calendario\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events:[\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n            //case para limpiar el evento del modal en el calendario\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvents: null\r\n            }\r\n\r\n            //case para actualizar o editar el evento del calendario\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n            //case para eliminar una nota del calendario\r\n            case types.eventDeleted:\r\n                return{\r\n                    ...state,\r\n                    events: state.events.filter(\r\n                        e => (e.id !== state.activeEvents.id) \r\n                    ),\r\n                    activeEvents: null\r\n                }\r\n\r\n                //case para cargar los datos del calnedario o se mantenga\r\n            case types.eventLoaded:\r\n                return {\r\n                    ...state,\r\n                    events: [ ...action.payload ]\r\n                }\r\n\r\n                //case para limpiar utilizando el logout\r\n            case types.eventLogout:\r\n                return {\r\n                    ...initialState,\r\n                    \r\n                }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n            //case para el uiCloseModal\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    //TODO: CalendarReducer\r\n    calendar: calendarReducer,\r\n    //TODO: AuthReducer\r\n    auth: authReducer\r\n    \r\n})","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from \"react\";\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from \"./router/AppRouter\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={ store }>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n\n\nReactDOM.render(\n    <CalendarApp  />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}